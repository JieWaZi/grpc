// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/second_calculation.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SubCalculationRequest struct {
	First                int32    `protobuf:"varint,1,opt,name=first,proto3" json:"first,omitempty"`
	Second               int32    `protobuf:"varint,2,opt,name=second,proto3" json:"second,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubCalculationRequest) Reset()         { *m = SubCalculationRequest{} }
func (m *SubCalculationRequest) String() string { return proto.CompactTextString(m) }
func (*SubCalculationRequest) ProtoMessage()    {}
func (*SubCalculationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_second_calculation_0b3156605c8eb8dc, []int{0}
}
func (m *SubCalculationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubCalculationRequest.Unmarshal(m, b)
}
func (m *SubCalculationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubCalculationRequest.Marshal(b, m, deterministic)
}
func (dst *SubCalculationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubCalculationRequest.Merge(dst, src)
}
func (m *SubCalculationRequest) XXX_Size() int {
	return xxx_messageInfo_SubCalculationRequest.Size(m)
}
func (m *SubCalculationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubCalculationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubCalculationRequest proto.InternalMessageInfo

func (m *SubCalculationRequest) GetFirst() int32 {
	if m != nil {
		return m.First
	}
	return 0
}

func (m *SubCalculationRequest) GetSecond() int32 {
	if m != nil {
		return m.Second
	}
	return 0
}

type SubCalculationResponse struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubCalculationResponse) Reset()         { *m = SubCalculationResponse{} }
func (m *SubCalculationResponse) String() string { return proto.CompactTextString(m) }
func (*SubCalculationResponse) ProtoMessage()    {}
func (*SubCalculationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_second_calculation_0b3156605c8eb8dc, []int{1}
}
func (m *SubCalculationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubCalculationResponse.Unmarshal(m, b)
}
func (m *SubCalculationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubCalculationResponse.Marshal(b, m, deterministic)
}
func (dst *SubCalculationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubCalculationResponse.Merge(dst, src)
}
func (m *SubCalculationResponse) XXX_Size() int {
	return xxx_messageInfo_SubCalculationResponse.Size(m)
}
func (m *SubCalculationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubCalculationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubCalculationResponse proto.InternalMessageInfo

func (m *SubCalculationResponse) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func init() {
	proto.RegisterType((*SubCalculationRequest)(nil), "SubCalculationRequest")
	proto.RegisterType((*SubCalculationResponse)(nil), "SubCalculationResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SecondCalculationServiceClient is the client API for SecondCalculationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SecondCalculationServiceClient interface {
	SubCalculation(ctx context.Context, in *SubCalculationRequest, opts ...grpc.CallOption) (*SubCalculationResponse, error)
}

type secondCalculationServiceClient struct {
	cc *grpc.ClientConn
}

func NewSecondCalculationServiceClient(cc *grpc.ClientConn) SecondCalculationServiceClient {
	return &secondCalculationServiceClient{cc}
}

func (c *secondCalculationServiceClient) SubCalculation(ctx context.Context, in *SubCalculationRequest, opts ...grpc.CallOption) (*SubCalculationResponse, error) {
	out := new(SubCalculationResponse)
	err := c.cc.Invoke(ctx, "/SecondCalculationService/SubCalculation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SecondCalculationServiceServer is the server API for SecondCalculationService service.
type SecondCalculationServiceServer interface {
	SubCalculation(context.Context, *SubCalculationRequest) (*SubCalculationResponse, error)
}

func RegisterSecondCalculationServiceServer(s *grpc.Server, srv SecondCalculationServiceServer) {
	s.RegisterService(&_SecondCalculationService_serviceDesc, srv)
}

func _SecondCalculationService_SubCalculation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubCalculationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SecondCalculationServiceServer).SubCalculation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SecondCalculationService/SubCalculation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SecondCalculationServiceServer).SubCalculation(ctx, req.(*SubCalculationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SecondCalculationService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "SecondCalculationService",
	HandlerType: (*SecondCalculationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SubCalculation",
			Handler:    _SecondCalculationService_SubCalculation_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/second_calculation.proto",
}

func init() {
	proto.RegisterFile("proto/second_calculation.proto", fileDescriptor_second_calculation_0b3156605c8eb8dc)
}

var fileDescriptor_second_calculation_0b3156605c8eb8dc = []byte{
	// 210 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2b, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x2f, 0x4e, 0x4d, 0xce, 0xcf, 0x4b, 0x89, 0x4f, 0x4e, 0xcc, 0x49, 0x2e, 0xcd, 0x49,
	0x2c, 0xc9, 0xcc, 0xcf, 0xd3, 0x03, 0x4b, 0x48, 0xc9, 0xa4, 0xe7, 0xe7, 0xa7, 0xe7, 0xa4, 0xea,
	0x27, 0x16, 0x64, 0xea, 0x27, 0xe6, 0xe5, 0xe5, 0x97, 0x80, 0x25, 0x8b, 0x21, 0xb2, 0x4a, 0xae,
	0x5c, 0xa2, 0xc1, 0xa5, 0x49, 0xce, 0x08, 0x5d, 0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25, 0x42,
	0x22, 0x5c, 0xac, 0x69, 0x99, 0x45, 0xc5, 0x25, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0xac, 0x41, 0x10,
	0x8e, 0x90, 0x18, 0x17, 0x1b, 0xc4, 0x22, 0x09, 0x26, 0xb0, 0x30, 0x94, 0xa7, 0x64, 0xc0, 0x25,
	0x86, 0x6e, 0x4c, 0x71, 0x41, 0x7e, 0x5e, 0x71, 0x2a, 0x48, 0x47, 0x51, 0x6a, 0x71, 0x69, 0x0e,
	0xcc, 0x20, 0x28, 0xcf, 0xa8, 0x8a, 0x4b, 0x22, 0x18, 0xac, 0x17, 0x49, 0x53, 0x70, 0x6a, 0x51,
	0x59, 0x66, 0x72, 0xaa, 0x50, 0x1c, 0x17, 0x1f, 0xaa, 0x69, 0x42, 0x62, 0x7a, 0x58, 0x5d, 0x29,
	0x25, 0xae, 0x87, 0xdd, 0x5a, 0x25, 0xe9, 0xa6, 0xcb, 0x4f, 0x26, 0x33, 0x89, 0x2a, 0x09, 0xe8,
	0x23, 0x85, 0x88, 0x7e, 0x71, 0x69, 0x92, 0x15, 0xa3, 0x96, 0x13, 0x7b, 0x14, 0x2b, 0xd8, 0xf7,
	0x49, 0x6c, 0x60, 0xca, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x81, 0x56, 0x7f, 0x19, 0x44, 0x01,
	0x00, 0x00,
}
